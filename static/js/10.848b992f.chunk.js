(this.webpackJsonpalgoes=this.webpackJsonpalgoes||[]).push([[10],{102:function(t,e,n){"use strict";n.r(e);var c=n(2),s=n(1),a=(n(86),n(0));e.default=function(){var t=Object(s.useRef)(null),e=Object(s.useState)(5),n=Object(c.a)(e,2),o=n[0],i=n[1],l=Object(s.useState)("0"),r=Object(c.a)(l,2),u=r[0],d=r[1],m=Object(s.useMemo)((function(){return t=o,d((function(t){return++t})),h(t);var t}),[o]);function h(t){return t<=0?1:t*h(t-1)}return Object(a.jsxs)("div",{className:"container",children:[Object(a.jsx)("h6",{children:"useMemo"}),Object(a.jsx)("code",{children:"const memoizedValue = useMemo(() => computeExpensiveValue(a, b), [a, b]);"}),Object(a.jsx)("p",{children:"useMemo() is a built-in React hook that accepts 2 arguments \u2014 a function compute that computes a result and the depedencies array:"}),Object(a.jsx)("code",{children:"const memoizedResult = useMemo(compute, dependencies);"}),Object(a.jsxs)("div",{className:"row",children:[Object(a.jsxs)("div",{className:"col-sm-6",children:[Object(a.jsx)("div",{className:"row",children:Object(a.jsx)("h6",{children:"Code"})}),Object(a.jsx)("div",{className:"row",children:Object(a.jsx)("div",{style:{height:"500px"},className:"border",children:Object(a.jsx)("algoes-code",{src:'import {useRef,useMemo,useState} from \'react\';\nimport \'../react/component/algoescode\'\nconst ReactUseMemo = () => {\n\tconst code = "";\n\tconst inputEl = useRef(null);\n\tconst [value, setValue] = useState(5);\n\tconst [counter, setCounter] = useState(\'0\');\n\n\tconst memoizedResult = useMemo(() => fact(value), [value]);\n\n\tfunction handleClick() {\n\t\tconsole.log(\'input \' + inputEl.current.value);\n\t\tsetValue(Number(inputEl.current.value));\n\t}\n\n\tfunction fact(n) {\n\t\tsetCounter((prev) => ++prev);\n\t\treturn factorial(n);\n\t}\n\n\tfunction inputChanged(e) {\n\t\tsetCounter(0);\n\t\tsetValue(Number(e.target.value));\n\t}\n\n\tfunction factorial(n) {\n\t\treturn (n <= 0 ? 1 : n * factorial(n - 1));\n\t}\n\treturn ( \n\t\t<div className = "container" >\n\t\t\t<h6 > useMemo < /h6> \n\t\t\t<code >\n\t\t\t\tconst memoizedValue = useMemo(() = & gt; computeExpensiveValue(a, b), [a, b]); \n \t\t\t< /code> \n \t\t\t<p >\n\t\t\tuseMemo() is a built - in React hook that accepts 2 arguments\u2014 a\n\t\t\tfunction compute that computes a result and the depedencies array:\n\t\t\t</p> \n\t\t\t<code >\n\t\t\tconst memoizedResult = useMemo(compute, dependencies); < /code> \n\t\t\t<div className = "row" >\n\t\t\t\t<div className = "col-sm-6" >\n \t<div className = "row" >\n\t\t\t\t\t\t<h6 > Code < /h6> \n\t\t\t\t\t</div> \n\t\t\t\t\t<div className = "row" >\n\t\t\t\t\t\t<div style = {{\t"heigth": "500px"}} className = "border" >\n\t\t\t\t\t\t<algoes - code src = {\tcode} > < /algoes-code> \n\t\t\t\t\t\t</div> \n\t\t\t\t\t</div> \n\t\t\t\t</div> \n\t\t\t\t<div className = "col-sm-6" >\n\t\t\t\t\t<div className = "row" >\n\t\t\t\t\t\t<h6 > Find Factorial Demo < /h6> \n\t\t\t\t\t</div> \n\t\t\t\t\t<div className = "row" >\n\t\t\t\t\t<div className = "col" > < input ref = {\n\t\t\t\t\t\tinputEl\n\t\t\t\t\t\t} onChange = {(e) => inputChanged(e)}\n\t\t\t\t\t\tplaceholder = {\tvalue}/>\n\t\t\t\t\t</div >\n\t\t\t\t\t<div className = "col" > < button onClick = {\n\t\t\t\t\t\t() => handleClick()\n\t\t\t\t\t\t} > Calculate < /button>\n\t\t\t\t\t</div >\n\t\t\t\t\t<div className = "col" > Result {\n\t\t\t\t\t\tmemoizedResult\n\t\t\t\t\t} < /div> \n\t\t\t\t</div> \n\t\t\t\t<div className = "row" >\n\t\t\t\t\t<div className = "col" >\n\t\t\t\t\t\tfor input {\tvalue} no of times\n\t\t\t\t\t\tfunction called {counter} < /div> \n\t\t\t\t</div> \n\t\t\t</div> \n\t\t</div> \n\t\t</div>\n\t)\n}\nexport default ReactUseMemo;\n'})})})]}),Object(a.jsxs)("div",{className:"col-sm-6",children:[Object(a.jsx)("div",{className:"row",children:Object(a.jsx)("h6",{children:"Find Factorial Demo"})}),Object(a.jsxs)("div",{className:"row",children:[Object(a.jsx)("div",{className:"col",children:Object(a.jsx)("input",{ref:t,onChange:function(t){return function(t){d(0),i(Number(t.target.value))}(t)},placeholder:o})}),Object(a.jsx)("div",{className:"col",children:Object(a.jsx)("button",{onClick:function(){return console.log("input "+t.current.value),void i(Number(t.current.value))},children:"Calculate"})}),Object(a.jsxs)("div",{className:"col",children:["Result ",m]})]}),Object(a.jsx)("div",{className:"row",children:Object(a.jsxs)("div",{className:"col",children:["for input ",o," no of times function called ",u]})})]})]})]})}},86:function(t,e,n){"use strict";var c=n(11),s=n.n(c),a=n(18),o=n(7),i=n(8),l=n(9),r=n(10),u=n(87),d=n(88),m=function(t){Object(l.a)(n,t);var e=Object(r.a)(n);function n(){var t;Object(o.a)(this,n),(t=e.call(this)).attachShadow({mode:"open"});var c=document.createElement("template");return c.innerHTML='<div className="border" id="editor"></div>',t.shadowRoot.appendChild(c.content.cloneNode(!0)),t.__element=null,t.__flask=null,t}return Object(i.a)(n,[{key:"connectedCallback",value:function(){var t=Object(a.a)(s.a.mark((function t(){var e;return s.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e=this.hasAttribute("src")?this.getAttribute("src"):"null",this.__element=this.shadowRoot.querySelector("#editor"),this.__flask=new d.a(this.__element,{language:"js",styleParent:this.shadowRoot,lineNumbers:!0}),this.__flask.updateCode(e);case 4:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}()},{key:"attributeChangedCallback",value:function(t,e,n){if("src"===t){var c=this.hasAttribute("src")?this.getAttribute("src"):"null";this.__flask&&this.__flask.updateCode(c)}}}],[{key:"observedAttributes",get:function(){return["src"]}}]),n}(Object(u.a)(HTMLElement));customElements.define("algoes-code",m)}}]);
//# sourceMappingURL=10.848b992f.chunk.js.map
{"version":3,"sources":["spring/cloud/logging.js"],"names":["SpringDistributedLogging","className","width","src"],"mappings":"qHAyBeA,UAzBkB,WAC7B,OACI,sBAAKC,UAAU,kBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,yDACA,4UACA,+BACI,6BACI,8BAAG,uDAAH,8JAEJ,6BACI,8BAAG,0CAAH,0MAIZ,qBAAKA,UAAU,MAAf,SACI,qBAAKC,MAAM,QAAQC,IAAI,oDAE3B,2CACA,qBAAKF,UAAU,MAAf,SACI,qBAAKC,MAAM,QAAQC,IAAI","file":"static/js/28.5a595d2f.chunk.js","sourcesContent":["const SpringDistributedLogging = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <h5>Distributed Log Tracing</h5>\r\n                <p>Microservices architecture involve multiple services which interact with each other. So a functionality may involve call to multiple microservices. Usually for systems developed using Microservices architecture, there are many microservices involved. These microservices collaborate with each other.</p>\r\n                <ul>\r\n                    <li>\r\n                        <p><code>Spring Cloud Sleuth</code> is used to generate and attach the trace id, span id to the logs so that these can then be used by tools like Zipkin and ELK for storage and analysis</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><code>Zipkin</code> is a distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in service architectures. Features include both the collection and lookup of this data</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"row\">\r\n                <img width=\"900px\" src='/algoes/img/spring.io/distributed-logging.jpg'></img>\r\n            </div>\r\n            <h5>ELK Stack</h5>\r\n            <div className=\"row\">\r\n                <img width=\"900px\" src='/algoes/img/spring.io/ELK.jpg'></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SpringDistributedLogging;"],"sourceRoot":""}
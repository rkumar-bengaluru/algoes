{"version":3,"sources":["react/usereducer.js","react/component/algoescode.js"],"names":["ReactUseReducer","className","style","src","AlgoesCode","attachShadow","mode","template","document","createElement","innerHTML","shadowRoot","appendChild","content","cloneNode","__element","__flask","a","this","hasAttribute","getAttribute","querySelector","CodeFlask","language","styleParent","lineNumbers","updateCode","name","oldValue","newValue","HTMLElement","customElements","define"],"mappings":"mGACA,wBAmBeA,UAjBS,WAEpB,OACI,sBAAKC,UAAU,YAAf,UACI,4CACA,mDACsB,4CADtB,kMAKA,oGACA,qBAAKC,MAAO,CAAE,OAAU,SAAWD,UAAU,aAA7C,SACI,6BAAaE,IAXZ,i4J,0GCDXC,E,kDACF,aAAe,IAAD,uBACV,gBACKC,aAAa,CAAEC,KAAM,SAC1B,IAAMC,EAAWC,SAASC,cAAc,YAH9B,OAIVF,EAASG,UAAT,6CACA,EAAKC,WAAWC,YAAYL,EAASM,QAAQC,WAAU,IACvD,EAAKC,UAAY,KACjB,EAAKC,QAAU,KAPL,E,4FAcd,4BAAAC,EAAA,sDACUd,EAAMe,KAAKC,aAAa,OAASD,KAAKE,aAAa,OAAS,OAClEF,KAAKH,UAAYG,KAAKP,WAAWU,cAAc,WAC/CH,KAAKF,QAAU,IAAIM,IAAUJ,KAAKH,UAAW,CAAEQ,SAAU,KAAMC,YAAaN,KAAKP,WAAYc,aAAa,IAC1GP,KAAKF,QAAQU,WAAWvB,GAJ5B,gD,4FAOA,SAAyBwB,EAAMC,EAAUC,GACrC,GAAa,QAATF,EAAgB,CAChB,IAAMxB,EAAMe,KAAKC,aAAa,OAASD,KAAKE,aAAa,OAAS,OAC9DF,KAAKF,SACLE,KAAKF,QAAQU,WAAWvB,O,+BAfpC,WACI,MAAO,CAAC,W,eAZS2B,cA+BzBC,eAAeC,OAAO,cAAe5B","file":"static/js/11.f6c7c9b9.chunk.js","sourcesContent":["\r\nimport '../react/component/algoescode';\r\n\r\nconst ReactUseReducer = () => {\r\n    const code = \"import {useEffect,\\tuseReducer,\\tuseState,\\tlazy,\\tSuspense} from \\\"react\\\"\\nimport menus from '../megamenu/megamenu.json';\\nimport SpringIntro from \\\"./home\\\";\\nimport SpringController from \\\"./controller\\\";\\nimport WebFlux from \\\"./webflux\\\";\\nimport Hateaos from \\\"./hateaos\\\";\\nimport LSErrorBoundary from \\\"../error\\\";\\nconst SpringScheduling = lazy(() =>\\timport ('./scheduling'));\\nconst WebSocket = lazy(() =>import ('./websocket/index'));\\nconst SpringRouter = lazy(() =>\\timport ('./router'));\\n\\nconst SpringHome = () => {\\n\\t\\tconst springView = {\\n\\t\\t\\tcurrent: < SpringIntro / > ,\\n\\t\\t\\tprev: ''\\n\\t\\t};\\n\\t\\tconst [state, dispatch] = useReducer(springReducer, springView);\\n\\t\\tconst [springMenu, setSpringMenu] = useState([]);\\n\\n\\t\\tuseEffect(() => {\\n\\t\\t\\tmenus.offers.map((item, index) => {\\n\\t\\t\\t\\tif (item.name === 'Spring.io') {\\n\\t\\t\\t\\t\\tsetSpringMenu(item.subMenus);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}, [springMenu]);\\n\\n\\t\\tfunction springReducer(state, action) {\\n\\t\\t\\tconsole.log(action.type);\\n\\t\\t\\tswitch (action.type) {\\n\\t\\t\\t\\tcase '0':\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\tcurrent: < SpringIntro / >\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\tcase '1':\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\tcurrent: < SpringController / >\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\tcase '2':\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\tcurrent: < WebFlux / >\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\tcase '4':\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\tcurrent: () => {\\n\\t\\t\\t\\t\\t\\t\\treturn ( \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Suspense fallback = { < div > loading... < /div>}> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<SpringScheduling / >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Suspense>\\n\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tcase '9':\\n\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\t\\t\\tcurrent: < WebSocket / >\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tcase '11':\\n\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\t\\t\\tcurrent: < Hateaos / >\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\tcase '25':\\n\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\t\\t\\tcurrent: () => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn ( \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<LSErrorBoundary >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Suspense fallback = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t() => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn <h1 > Error happened in children. < /h1>}}> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<SpringRouter / >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Suspense> <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/LSErrorBoundary>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tprev: state.current,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcurrent: 'TODO'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tfunction renderMenu() {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn ( \\n\\t\\t\\t\\t\\t\\t\\t\\t<ul > {springMenu.map((e, i) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn ( <div >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a key = {i}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\thref = \\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonClick = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t() => dispatch({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: e.action\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li key = {i} > {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\te.name\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} < /li> <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/a> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul > {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\te.links.map((item, index) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn ( <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ta key = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tindex\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\thref = \\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonClick = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t() => dispatch({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: item.action\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tli key = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tindex\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} > {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\titem.name\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} < /li> <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} </ul> <\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} </ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tfunction renderCurrent() {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn ( <div > {state.current} < /div>)\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\treturn ( \\n\\t\\t\\t\\t\\t\\t\\t<div className = \\\"container-fluid\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t<h6 > Spring.io < /h6> \\n\\t\\t\\t\\t\\t\\t\\t\\t<div className = \\\"row\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t<div className = \\\"col-sm-3\\\" > {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trenderMenu()\\n\\t\\t\\t\\t\\t\\t\\t\\t} </div> \\n\\t\\t\\t\\t\\t\\t\\t\\t<div className = \\\"col-sm-9\\\" > {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trenderCurrent()\\n\\t\\t\\t\\t\\t\\t\\t\\t} </div> \\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t)\\n}\\nexport default SpringHome;\\n\";\r\n    return (\r\n        <div className=\"container\">\r\n            <h6>useReducer</h6>\r\n            <p>\r\n                An alternative to <mark>useState</mark>. Accepts a reducer of type (state, action) =&gt; newState, and \r\n                returns the current state paired with a dispatch method. (If youâ€™re familiar with Redux, \r\n                you already know how this works.)\r\n            </p>\r\n            <code>const [state, dispatch] = useReducer(reducer, initialArg, init);</code>\r\n            <div style={{ \"height\": \"600px\" }} className=\"row border\">\r\n                <algoes-code src={code}></algoes-code>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ReactUseReducer;","\r\nimport CodeFlask from 'codeflask'\r\n\r\nclass AlgoesCode extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'open' });\r\n        const template = document.createElement('template')\r\n        template.innerHTML = `<div className=\"border\" id=\"editor\"></div>`;\r\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n        this.__element = null;\r\n        this.__flask = null;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src']\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const src = this.hasAttribute('src') ? this.getAttribute('src') : 'null';\r\n        this.__element = this.shadowRoot.querySelector('#editor');\r\n        this.__flask = new CodeFlask(this.__element, { language: 'js', styleParent: this.shadowRoot, lineNumbers: true });\r\n        this.__flask.updateCode(src);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'src') {\r\n            const src = this.hasAttribute('src') ? this.getAttribute('src') : 'null';\r\n            if (this.__flask) {\r\n                this.__flask.updateCode(src);\r\n            }\r\n        }\r\n    }\r\n}\r\ncustomElements.define('algoes-code', AlgoesCode);"],"sourceRoot":""}
{"version":3,"sources":["react/component/algoescode.js","nodejs/axios/axios.js"],"names":["AlgoesCode","attachShadow","mode","template","document","createElement","innerHTML","shadowRoot","appendChild","content","cloneNode","__element","a","src","this","hasAttribute","getAttribute","console","log","querySelector","CodeFlask","language","styleParent","lineNumbers","updateCode","HTMLElement","customElements","define","AxiosFramework","home","showComponent","name","toUnicode","str","split","map","value","index","array","temp","charCodeAt","toString","toUpperCase","length","join","className","axiosmenus","subMenus","feature","childs","links","style"],"mappings":"wgBAGMA,E,kDACF,aAAe,IAAD,uBACV,gBACKC,aAAa,CAAEC,KAAM,SAC1B,IAAMC,EAAWC,SAASC,cAAc,YAH9B,OAIVF,EAASG,UAAT,6CACA,EAAKC,WAAWC,YAAYL,EAASM,QAAQC,WAAU,IACvD,EAAKC,UAAY,KANP,E,4FAYd,4BAAAC,EAAA,sDACUC,EAAMC,KAAKC,aAAa,OAASD,KAAKE,aAAa,OAAS,OAClEC,QAAQC,IAAIL,GACZC,KAAKH,UAAYG,KAAKP,WAAWY,cAAc,WAC/CF,QAAQC,IAAIJ,KAAKH,WACH,IAAIS,IAAUN,KAAKH,UAAW,CAAEU,SAAU,KAAMC,YAAaR,KAAKP,WAAWgB,aAAa,IAClGC,WAAWX,GANrB,gD,sFAJA,WACI,MAAO,CAAC,MAAO,WAAY,OAAQ,a,eAVlBY,cAwBzBC,eAAeC,OAAO,cAAe3B,G,WCiCtB4B,UAzDQ,WAEnB,IAAMC,EAAO,qCAAE,iDACX,sSACA,0CACA,+BACI,uEACA,iEACA,0DACA,gEACA,qEACA,iDACA,oEACA,uFAER,SAASC,EAAcC,GACnBd,QAAQC,IAAIa,GAGhB,SAASC,EAAUC,GACf,OAAOA,EAAIC,MAAM,IAAIC,KAAI,SAAUC,EAAOC,EAAOC,GAC7C,IAAIC,EAAOH,EAAMI,WAAW,GAAGC,SAAS,IAAIC,cAC5C,OAAIH,EAAKI,OAAS,EACP,MAAQJ,EAEZH,KACRQ,KAAK,IAIZ,OACI,qBAAKC,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACKC,EAAWC,SAASZ,KAAI,SAACa,EAASX,GAC/B,OAAO,cAAC,IAAD,CAA6BN,KAAMiB,EAAQjB,KAAMkB,OAAQD,EAAQE,MAAOpB,cAAeA,GAAjEO,QAGrC,sBAAKQ,UAAU,WAAf,UACI,qBAAKA,UAAU,MAAf,SACKhB,IAEL,qBAAKsB,MAAO,CAAC,OAAW,QAASN,UAAU,aAA3C,SACI,6BACIhC,IAAKmB,EAAU,qFAGvB,qBAAKmB,MAAO,CAAC,OAAW,SAAUN,UAAU,aAA5C,SACI,6BACIhC,IAAKmB,EAAU","file":"static/js/6.d4910f4a.chunk.js","sourcesContent":["\r\nimport CodeFlask from 'codeflask'\r\n\r\nclass AlgoesCode extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'open' });\r\n        const template = document.createElement('template')\r\n        template.innerHTML = `<div className=\"border\" id=\"editor\"></div>`;\r\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n        this.__element = null;\r\n    }\r\n    static get observedAttributes() {\r\n        return ['src', 'readonly', 'mode', 'theme']\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const src = this.hasAttribute('src') ? this.getAttribute('src') : 'null';\r\n        console.log(src);\r\n        this.__element = this.shadowRoot.querySelector('#editor');\r\n        console.log(this.__element);\r\n        const flask = new CodeFlask(this.__element, { language: 'js', styleParent: this.shadowRoot,lineNumbers: true });\r\n        flask.updateCode(src);\r\n       \r\n    }\r\n\r\n}\r\ncustomElements.define('algoes-code', AlgoesCode);","import ParentComponent from \"../collapse/parentcomponent\";\r\nimport axiosmenus from './axios.json';\r\nimport '../../react/component/algoescode'\r\nconst AxiosFramework = () => {\r\n\r\n    const home = <><h6>Axios Framework</h6>\r\n        <p>Axios is a promise-based HTTP Client for node.js and the browser. It is isomorphic (= it can run in the browser and nodejs with the same codebase). On the server-side it uses the native node.js http module, while on the client (browser) it uses XMLHttpRequests.</p>\r\n        <h6>Features</h6>\r\n        <ul>\r\n            <li>Make XMLHttpRequests from the browser</li>\r\n            <li>Make http requests from node.js</li>\r\n            <li>Supports the Promise API</li>\r\n            <li>Intercept request and response</li>\r\n            <li>Transform request and response data</li>\r\n            <li>Cancel requests</li>\r\n            <li>Automatic transforms for JSON data</li>\r\n            <li>Client side support for protecting against XSRF</li>\r\n        </ul></>;\r\n    function showComponent(name) {\r\n        console.log(name);\r\n    }\r\n\r\n    function toUnicode(str) {\r\n        return str.split('').map(function (value, index, array) {\r\n            var temp = value.charCodeAt(0).toString(16).toUpperCase();\r\n            if (temp.length > 2) {\r\n                return '\\\\u' + temp;\r\n            }\r\n            return value;\r\n        }).join('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                    {axiosmenus.subMenus.map((feature, index) => {\r\n                        return <ParentComponent key={index} name={feature.name} childs={feature.links} showComponent={showComponent} />\r\n                    })}\r\n                </div>\r\n                <div className=\"col-sm-9\">\r\n                    <div className=\"row\">\r\n                        {home}\r\n                    </div>\r\n                    <div style={{\"height\" : \"50px\"}} className=\"row border\">\r\n                        <algoes-code \r\n                            src={toUnicode(`<script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>`)}/>\r\n                    </div>\r\n                    \r\n                    <div style={{\"height\" : \"300px\"}} className=\"row border\">\r\n                        <algoes-code \r\n                            src={toUnicode(`const axios = require('axios');\\n// Make a request for a user with a given ID\\naxios.get('/user?ID=12345')\\n\\t.then(function (response) {\\n\\t\\t// handle success\\n\\t\\tconsole.log(response);\\n\\t})\\n\\t.catch(function (error) {\\n\\t\\t// handle error\\n\\t\\tconsole.log(error);\\n\\t})\\n\\t.then(function () {\\n\\t\\t// always executed\\n\\t});\\n`)}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AxiosFramework;"],"sourceRoot":""}
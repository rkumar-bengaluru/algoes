{"version":3,"sources":["spring/cloud/security.js"],"names":["SpringSecurity","home","className","href","onClick","e","eventHandler","useState","def","setDef","basicAuth","width","src","type","preventDefault","console","log"],"mappings":"mIA4GeA,UA1GQ,WAGnB,IAAMC,EAAO,WACT,OACI,sBAAKC,UAAU,MAAf,UACI,iDACA,uMACA,8EACA,+BACI,+BACI,mBAAGC,KAAK,GAAGC,QAAS,SAACC,GAAD,OAAOC,EAAaD,EAAG,IAA3C,kCACA,mFAEJ,+BACI,mBAAGF,KAAK,GAAGC,QAAS,SAACC,GAAD,OAAOC,EAAaD,EAAG,IAA3C,uCACA,sJAIJ,+BACI,mBAAGF,KAAK,GAAGC,QAAS,SAACC,GAAD,OAAOC,EAAaD,EAAG,IAA3C,8CACA,sMACA,oFAEJ,+BACI,mBAAGF,KAAK,GAAGC,QAAS,SAACC,GAAD,OAAOC,EAAaD,EAAG,IAA3C,qCACA,mHAEJ,+BACI,mBAAGF,KAAK,GAAGC,QAAS,SAACC,GAAD,OAAOC,EAAaD,EAAG,IAA3C,gCACA,yKAGA,gEAEJ,+BACI,mBAAGF,KAAK,GAAGC,QAAS,SAACC,GAAD,OAAOC,EAAaD,EAAG,IAA3C,gCACA,0KAQpB,EAAsBE,mBAASN,GAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KAEMC,EAAY,WACd,OACI,qCACI,qBAAKR,UAAU,MAAf,SACI,wDAEJ,sBAAKA,UAAU,MAAf,UACI,wFAA0D,+DAC1D,0DACA,+BACI,iFACA,4GAGR,qBAAKA,UAAU,MAAf,SACI,qBAAKS,MAAM,QAAQC,IAAI,2CAE3B,qBAAKV,UAAU,MAAf,SACI,oLAIJ,iNAKA,qBAAKA,UAAU,MAAf,SACI,mBAAGC,KAAK,GAAGC,QAAS,SAACC,GAAD,OAAOC,EAAaD,EAAG,IAA3C,wBAQhB,SAASC,EAAaD,EAAGQ,GAGrB,OAFAR,EAAES,iBACFC,QAAQC,IAAIH,GACJA,GACJ,KAAK,EACDJ,EAAOR,GACP,MACJ,KAAK,EACDQ,EAAOC,GACP,MACJ,QACID,EAAO,0CAInB,OACI,qBAAKP,UAAU,kBAAf,SACKM","file":"static/js/26.4f18ec15.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nconst SpringSecurity = () => {\r\n\r\n\r\n    const home = () => {\r\n        return (\r\n            <div className=\"row\">\r\n                <h5>Spring Security</h5>\r\n                <p>Spring Security is a powerful and highly customizable authentication and access-control framework. It is the de-facto standard for securing Spring-based applications.</p>\r\n                <p>Topics covered for Spring security are below:</p>\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"\" onClick={(e) => eventHandler(e, 1)}>Basic Authentication</a>\r\n                        <p>Each Request must contain username and password</p>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"\" onClick={(e) => eventHandler(e, 2)}>Form Basic Authentication</a>\r\n                        <p>User authenticate once, the server attaches JESSIONID, subsequent request\r\n                            is authenticated based on the JESSIONID.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"\" onClick={(e) => eventHandler(e, 3)}>Cross Site Request Forgery(CSRF)</a>\r\n                        <p>Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which theyâ€™re currently authenticated</p>\r\n                        <p>Enable for any resource access via web browsers.</p>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"\" onClick={(e) => eventHandler(e, 4)}>Authentication Provider</a>\r\n                        <p>Integrate Application User Repository with application authentication provider.</p>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"\" onClick={(e) => eventHandler(e, 5)}>JWT Authentication</a>\r\n                        <p>Authenticate once with JWT Filter and attaches JWT token to response,\r\n                            subsequent request is authenticated and authroized with JWT token.\r\n                        </p>\r\n                        <p>Good for REST API securtity.</p>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"\" onClick={(e) => eventHandler(e, 6)}>JWT Token Verifier</a>\r\n                        <p>Servlet filter to verify if the passed JWT token is trust worthy.\r\n                            before user is allowed to access the desired server resource.\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    const [def, setDef] = useState(home);\r\n\r\n    const basicAuth = () => {\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <h5>Basic Authentication</h5>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <p>Trigger to enable basic authentication is to configure <code>HttpSecurity.httpBasic()</code></p>\r\n                    <p>There are 2 microservices</p>\r\n                    <ul>\r\n                        <li>Partner Service (/partner/create,/partner/&#123;id&#125;)</li>\r\n                        <li>Search Service (/search/all,/search/movie/&#123;id&#125;,/search/theatre/&#123;id&#125;)</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <img width=\"900px\" src='/algoes/img/spring.io/basic-auth.jpg'></img>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <p>There are 2 Roles (ADMIN and PUBLIC). ADMIN can access partner resource \r\n                        and search resource, however PUBLIC role can only access search resource.\r\n                    </p>\r\n                </div>\r\n                <code>http.authorizeRequests()\r\n\t\t\t.antMatchers(\"/search/**\")\r\n\t\t\t.hasAnyRole(UserRoles.ADMIN.name(),UserRoles.PUBLIC.name())\r\n\t\t\t.antMatchers(\"/partner/**\")\r\n\t\t\t.hasRole(UserRoles.ADMIN.name());</code>\r\n                <div className=\"row\">\r\n                    <a href=\"\" onClick={(e) => eventHandler(e, 0)}>Back</a>\r\n                </div>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    function eventHandler(e, type) {\r\n        e.preventDefault();\r\n        console.log(type);\r\n        switch (type) {\r\n            case 0:\r\n                setDef(home);\r\n                break;\r\n            case 1:\r\n                setDef(basicAuth);\r\n                break;\r\n            default:\r\n                setDef(<code>TODO</code>);\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {def}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpringSecurity;"],"sourceRoot":""}
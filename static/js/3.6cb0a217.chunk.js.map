{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","spring/websocket/websocketcontext.js","spring/websocket/websocketprovider.js","spring/websocket/component.js","spring/websocket/index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","WebSocketContext","React","createContext","WebSocketProvider","props","useState","components","setComponents","Provider","value","handleSelectedComponent","cid","all","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","types","component","name","currentCode","code","children","Component","className","href","onClick","handleSelected","Components","useContext","map","options","lineNumbers","matchBrackets","continueComments","extraKeys","mode","WebSocket"],"mappings":"qHAEA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,E,kBCXMU,E,OADUC,EAAMC,gB,OC8BhBC,EA7BW,SAACC,GAEvB,MAAkCC,mBAC9B,CACI,MAAU,CACN,CAAC,KAAQ,aAAc,KAAS,wTAChC,CAAC,KAAS,kBAAmB,KAAS,udACtC,CAAC,KAAS,QAAS,KAAS,6CAC5B,CAAC,KAAS,SAAU,KAAS,qzCAC7B,CAAC,KAAS,OAAQ,KAAS,ulDAE/B,YAAgB,yTATxB,mBAAMC,EAAN,KAAiBC,EAAjB,KAaA,OACI,cAAC,EAAiBC,SAAlB,CAA2BC,MAAO,CAC9BH,WAAYA,EACZI,wBAAyB,SAAAC,GACrB,IAAIC,EFLL,SAAwBC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACN3B,EAAQI,OAAO0B,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,OAAAC,EAAA,GAAeP,EAAQM,EAAKF,EAAOE,OAE5B5B,OAAO8B,0BAChB9B,OAAO+B,iBAAiBT,EAAQtB,OAAO8B,0BAA0BJ,IAEjE9B,EAAQI,OAAO0B,IAASC,SAAQ,SAAUC,GACxC5B,OAAO6B,eAAeP,EAAQM,EAAK5B,OAAOK,yBAAyBqB,EAAQE,OAKjF,OAAON,EEZc,IAAOP,GACVO,EAASD,EAAIW,MAAM7B,QAAO,SAAA8B,GAAS,OAAIA,EAAUC,OAASd,KAC9DC,EAAIc,YAAcb,EAAO,GAAGc,KAC5BpB,EAAcK,KANtB,SASKR,EAAMwB,Y,OCxBbC,EAAY,SAAAzB,GAAK,OACnB,cAAC,WAAD,UACI,qBAAK0B,UAAU,MAAf,SACI,mBAAGC,KAAK,qBAAqBC,QAAS5B,EAAM6B,eAA5C,SAA6D7B,EAAMqB,YAgChES,EA3BI,WACf,IAAMzB,EAAQ0B,qBAAWnC,GAEzB,OACI,eAAC,WAAD,WACI,qBAAK8B,UAAU,MAAf,SACKrB,EAAMH,WAAWiB,MAAMa,KAAI,SAAAZ,GAAS,OACjC,cAAC,EAAD,CAEIC,KAAMD,EAAUC,KAChBQ,eAAgB,kBAAMxB,EAAMC,wBAAwBc,EAAUC,QAFzDD,EAAUC,WAM3B,qBAAKK,UAAU,MAAf,SACI,cAAC,eAAD,CAAYrB,MAAOA,EAAMH,WAAWoB,YAChCW,QAAS,CACLC,aAAa,EACbC,eAAe,EACfC,iBAAkB,QAClBC,UAAW,CAAE,SAAU,iBACvBC,KAAM,sB,QCffC,UAdG,WAEd,OACI,cAAC,EAAD,UACI,eAAC,IAAD,WACI,sBAAKb,UAAU,MAAf,UACI,4CACA,uQAEJ,cAAC,EAAD","file":"static/js/3.6cb0a217.chunk.js","sourcesContent":["import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from \"react\";\r\nconst WebSocketContext = React.createContext();\r\nexport default WebSocketContext;","import { useState } from \"react\"\r\nimport WebSocketContext from \"./websocketcontext\"\r\nconst WebSocketProvider = (props) => {\r\n    \r\n    const[components,setComponents] = useState(\r\n        {\r\n            \"types\" : [ \r\n                {\"name\": \"Controller\", \"code\" : \"@Controller\\npublic class GreetingController {\\n\\t@MessageMapping(\\\"/hello\\\")\\n\\t@SendTo(\\\"/topic/greetings\\\")\\n\\tpublic Greeting greeting(String message) throws Exception {\\n\\t\\tThread.sleep(1000); // simulated delay\\n\\t\\treturn new Greeting(\\\"Hello, \\\" + HtmlUtils.htmlEscape(message.getName()) + \\\"!\\\");\\n\\t}\\n}\\n\"},\r\n                {\"name\" : \"WebSocketConfig\", \"code\" : \"@Configuration\\n@EnableWebSocketMessageBroker\\npublic class WebSocketConfig implements WebSocketMessageBrokerConfigurer {\\n\\t@Override\\n\\tpublic void configureMessageBroker(MessageBrokerRegistry config) {\\n\\t\\tconfig.enableSimpleBroker(\\\"/topic\\\");\\n\\t\\tconfig.setApplicationDestinationPrefixes(\\\"/app\\\");\\n\\t}\\n\\n\\t@Override\\n\\tpublic void registerStompEndpoints(StompEndpointRegistry registry) {\\n\\t\\tregistry.addEndpoint(\\\"/localshop-websocket\\\").withSockJS();\\n\\t}\\n}\\n\"},\r\n                {\"name\" : \"Modal\", \"code\" : \"public record Greeting(String message) {}\"},\r\n                {\"name\" : \"Script\", \"code\" : \"var stompClient = null;\\n\\nfunction setConnected(connected) {\\n\\t$(\\\"#connect\\\").prop(\\\"disabled\\\", connected);\\n\\t$(\\\"#disconnect\\\").prop(\\\"disabled\\\", !connected);\\n\\tif (connected) {\\n\\t\\t$(\\\"#conversation\\\").show();\\n\\t} else {\\n\\t\\t$(\\\"#conversation\\\").hide();\\n\\t}\\n\\t$(\\\"#greetings\\\").html(\\\"\\\");\\n}\\n\\nfunction connect() {\\n\\tvar socket = new SockJS('/localshop-websocket');\\n\\tstompClient = Stomp.over(socket);\\n\\tstompClient.connect({}, function (frame) {\\n\\t\\tsetConnected(true);\\n\\t\\tconsole.log('Connected: ' + frame);\\n\\t\\tstompClient.subscribe('/topic/greetings', function (greeting) {\\n\\t\\t\\tshowGreeting(JSON.parse(greeting.body).content);\\n\\t\\t});\\n\\t});\\n}\\n\\nfunction disconnect() {\\n\\tif (stompClient !== null) {\\n\\t\\tstompClient.disconnect();\\n\\t}\\n\\tsetConnected(false);\\n\\tconsole.log(\\\"Disconnected\\\");\\n}\\n\\nfunction sendName() {\\n\\tstompClient.send(\\\"/app/hello\\\", {}, JSON.stringify({\\n\\t\\t'name': $(\\\"#name\\\").val()\\n\\t}));\\n}\\n\\nfunction showGreeting(message) {\\n\\t$(\\\"#greetings\\\").append(\\\"<tr><td>\\\" + message + \\\"</td></tr>\\\");\\n}\\n\\n$(function () {\\n\\t$(\\\"form\\\").on('submit', function (e) {\\n\\t\\te.preventDefault();\\n\\t});\\n\\t$(\\\"#connect\\\").click(function () {\\n\\t\\tconnect();\\n\\t});\\n\\t$(\\\"#disconnect\\\").click(function () {\\n\\t\\tdisconnect();\\n\\t});\\n\\t$(\\\"#send\\\").click(function () {\\n\\t\\tsendName();\\n\\t});\\n});\\n\"},\r\n                {\"name\" : \"Html\", \"code\" : \"<!DOCTYPE html>\\n<html>\\n <head>\\n <title>Hello WebSocket</title>\\n <link href=\\\"/webjars/bootstrap/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\\n <link href=\\\"/main.css\\\" rel=\\\"stylesheet\\\">\\n <script src=\\\"/webjars/jquery/jquery.min.js\\\"></script>\\n <script src=\\\"/webjars/sockjs-client/sockjs.min.js\\\"></script>\\n <script src=\\\"/webjars/stomp-websocket/stomp.min.js\\\"></script>\\n <script src=\\\"/app.js\\\"></script>\\n </head>\\n <body>\\n <noscript>\\n <h2 style=\\\"color: #ff0000\\\">Seems your browser doesn't support Javascript! Websocket relies on Javascript being\\n enabled. Please enable\\n Javascript and reload this page!\\n </h2>\\n </noscript>\\n <div id=\\\"main-content\\\" class=\\\"container\\\">\\n <div class=\\\"row\\\">\\n <div class=\\\"col-md-6\\\">\\n <form class=\\\"form-inline\\\">\\n <div class=\\\"form-group\\\">\\n <label for=\\\"connect\\\">WebSocket connection:</label>\\n <button id=\\\"connect\\\" class=\\\"btn btn-default\\\" type=\\\"submit\\\">Connect</button>\\n <button id=\\\"disconnect\\\" class=\\\"btn btn-default\\\" type=\\\"submit\\\" disabled=\\\"disabled\\\">Disconnect\\n </button>\\n </div>\\n </form>\\n </div>\\n <div class=\\\"col-md-6\\\">\\n <form class=\\\"form-inline\\\">\\n <div class=\\\"form-group\\\">\\n <label for=\\\"name\\\">What is your name?</label>\\n <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Your name here...\\\">\\n </div>\\n <button id=\\\"send\\\" class=\\\"btn btn-default\\\" type=\\\"submit\\\">Send</button>\\n </form>\\n </div>\\n </div>\\n <div class=\\\"row\\\">\\n <div class=\\\"col-md-12\\\">\\n <table id=\\\"conversation\\\" class=\\\"table table-striped\\\">\\n <thead>\\n <tr>\\n <th>Greetings</th>\\n </tr>\\n </thead>\\n <tbody id=\\\"greetings\\\">\\n </tbody>\\n </table>\\n </div>\\n </div>\\n </div>\\n </body>\\n</html>\\n\"}\r\n            ],\r\n            \"currentCode\" : '@Controller\\npublic class GreetingController {\\n\\t@MessageMapping(\\\"/hello\\\")\\n\\t@SendTo(\\\"/topic/greetings\\\")\\n\\tpublic Greeting greeting(String message) throws Exception {\\n\\t\\tThread.sleep(1000); // simulated delay\\n\\t\\treturn new Greeting(\\\"Hello, \\\" + HtmlUtils.htmlEscape(message.getName()) + \\\"!\\\");\\n\\t}\\n}\\n'\r\n        }\r\n    );\r\n\r\n    return (\r\n        <WebSocketContext.Provider value={{\r\n            components: components,\r\n            handleSelectedComponent: cid => {\r\n                var all = {...components};\r\n                var target = all.types.filter(component => component.name === cid);\r\n                all.currentCode = target[0].code;\r\n                setComponents(all);\r\n            }\r\n        }}>\r\n            {props.children}\r\n        </WebSocketContext.Provider>\r\n    )\r\n}\r\nexport default WebSocketProvider;","import { useContext, Fragment } from \"react\";\r\nimport WebSocketContext from \"./websocketcontext\";\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\r\nconst Component = props => (\r\n    <Fragment>\r\n        <div className=\"col\">\r\n            <a href=\"javascript:void(0)\" onClick={props.handleSelected}>{props.name}</a>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst Components = () => {\r\n    const value = useContext(WebSocketContext);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                {value.components.types.map(component => (\r\n                    <Component\r\n                        key={component.name}\r\n                        name={component.name}\r\n                        handleSelected={() => value.handleSelectedComponent(component.name)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className=\"row\">\r\n                <CodeMirror value={value.components.currentCode}\r\n                    options={{\r\n                        lineNumbers: true,\r\n                        matchBrackets: true,\r\n                        continueComments: \"Enter\",\r\n                        extraKeys: { \"Ctrl-Q\": \"toggleComment\" },\r\n                        mode: \"javascript\"\r\n                    }} />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Components;","import WebSocketProvider from \"./websocketprovider\";\r\nimport Components from \"./component\";\r\nimport LSErrorBoundary from \"../../error\";\r\nconst WebSocket = () => {\r\n\r\n    return (\r\n        <WebSocketProvider>\r\n            <LSErrorBoundary>\r\n                <div className=\"row\">\r\n                    <h6>WebSocket </h6>\r\n                    <p>The WebSocket protocol has only two agendas : 1.) to open up a handshake, and 2.) to help the data transfer. Once the server and client both have their handshakes in, they can send data to each other with less overhead at will.</p>\r\n                </div>\r\n                <Components />\r\n            </LSErrorBoundary>\r\n        </WebSocketProvider>\r\n    )\r\n}\r\nexport default WebSocket;"],"sourceRoot":""}
{
    "@context": "https://schema.org",
    "@id": "https://rkumar-bengaluru.github.io/algoes/#/algorithm/20263",
    "@type": "Product",
    "productID": 20263,
    "name": "Remove Duplicate from the array | rkumar-bengaluru.github.io",
    "description" : "Remove Duplicate from the array.",
    "title" : "Remove Duplicate from array",
    "keywords" : "Remove Duplicate from array",
    "sku": 20263,
    "mpn": 20263,
    "brand": {
        "@type": "Brand",
        "name": "Rupak Kumar..."
    },
    "category": " > home > algorithm > sorting > remove duplicate",
    "complextyMetrics" : {
        "Worst-case performance" : "O(n)",
        "Best-case performance" : "O(n)",
        "Average performance" : "O(n)",
        "Worst-case space complexity" : "O(n)"
    },
    "code" : "var input = [\"rupak\",\"aryan\",\"rupak\"];\n/**\n * Using map we can achieve this is 1 iteration. Loop over each\n * item in the array and check if the item is present in the\n * map or not. If not present add the item in the new array.\n *\n * Brute force will take O(n2), where each item is iterated \n * over the array 2 times. Example:- take the first item and \n * iterate over the remaining item.\n * **/\n function removeDup() {\n\t // print the input array.\n\t console.log('input : ' + JSON.stringify(input));\n\t const map = new Map();\n\t var output = [];\n\t for(var i = 0; i < input.length; i++) {\n\t\t// check if the item is present or not.\n\t\tif(!map.get(input[i])) {\n\t\t\t// not present and hence add to map\n\t\t\tmap.set(input[i],input[i]);\n\t\t\t// add to output array.\n\t\t\toutput.push(input[i]);\n\t\t}\n\t}\n\t// print the output array.\n\tconsole.log('output : ' + JSON.stringify(output));\n}\n\nremoveDup();"
}
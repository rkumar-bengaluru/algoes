{
    "@context": "https://schema.org",
    "@id": "https://rkumar-bengaluru.github.io/algoes/20276",
    "@type": "WebSite",
    "additionalType": [
        "CreativeWork",
        "Person"
    ],
    "url": "https://rkumar-bengaluru.github.io/algoes/20276",
    "headline": "Algoes - Palindrome String! ",
    "image": "https://rkumar-bengaluru.github.io/algoes/img/icon.svg",
    "specialty": "algorithms, data structures, design patterns, regular expresssion, interview questions",
    "productID": 20276,
    "name": "Algoes - Palindrome String! | rkumar-bengaluru.github.io",
    "description": "Algoes - Palindrome String!",
    "title": "Algoes - Palindrome String! | rkumar-bengaluru.github.io",
    "keywords": [
        "Algoes - Palindrome String!"
    ],
    "sku": 20276,
    "mpn": 20276,
    "brand": {
        "@type": "Brand",
        "name": "Rupak Kumar..."
    },
    "category": " > home > algorithm > string > Palindrome String",
    "complextyMetrics": {
        "Worst-case performance": "-",
        "Best-case performance": "-",
        "Average performance": "-",
        "Worst-case space complexity": "-"
    },
    "code": "/**\n * Utility function to convert a string\n * to lower case.\n */\nfunction toLowerCase(input) {\n\tvar asciitableL = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', \n\t\t\t\t\t\t'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', \n\t\t\t\t\t\t'q', 'r', 's', 't', 'u', 'v', 'w', 'x', \n\t\t\t\t\t\t'y', 'z'];\n\tvar response = '';\n\t// A 65 , Z 90\n\tfor (let c of input) {\n\t\tif (c.charCodeAt() >= 65 && c.charCodeAt() <= 90) {\n\t\t\tvar idx = c.charCodeAt() - 65;\n\t\t\tresponse += asciitableL[idx];\n\t\t} else {\n\t\t\tresponse += c;\n\t\t}\n\t}\n\treturn response;\n}\n/**\n * Check if a given input is a palindrome or not, \n * an input is an palindrom if the characters from\n * left and right are the same.\n * \n * @param {palindrome} input \n * @returns \n */\nfunction checkIfPalindrome(input) {\n\tvar i = 0;\n\tvar j = input.length - 1;\n\tinput = toLowerCase(input);\n\twhile (i < j) {\n\t\tif (input[i] != input[j]) {\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t\tj--;\n\t}\n\treturn true;\n}\nconsole.log(checkIfPalindrome('iTopiNonAvevanoNipoti'));\n"
}
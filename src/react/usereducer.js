
import '../react/component/algoescode';

const ReactUseReducer = () => {
    const code = "import {useEffect,\tuseReducer,\tuseState,\tlazy,\tSuspense} from \"react\"\nimport menus from '../megamenu/megamenu.json';\nimport SpringIntro from \"./home\";\nimport SpringController from \"./controller\";\nimport WebFlux from \"./webflux\";\nimport Hateaos from \"./hateaos\";\nimport LSErrorBoundary from \"../error\";\nconst SpringScheduling = lazy(() =>\timport ('./scheduling'));\nconst WebSocket = lazy(() =>import ('./websocket/index'));\nconst SpringRouter = lazy(() =>\timport ('./router'));\n\nconst SpringHome = () => {\n\t\tconst springView = {\n\t\t\tcurrent: < SpringIntro / > ,\n\t\t\tprev: ''\n\t\t};\n\t\tconst [state, dispatch] = useReducer(springReducer, springView);\n\t\tconst [springMenu, setSpringMenu] = useState([]);\n\n\t\tuseEffect(() => {\n\t\t\tmenus.offers.map((item, index) => {\n\t\t\t\tif (item.name === 'Spring.io') {\n\t\t\t\t\tsetSpringMenu(item.subMenus);\n\t\t\t\t}\n\t\t\t});\n\t\t}, [springMenu]);\n\n\t\tfunction springReducer(state, action) {\n\t\t\tconsole.log(action.type);\n\t\t\tswitch (action.type) {\n\t\t\t\tcase '0':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\tcurrent: < SpringIntro / >\n\t\t\t\t\t};\n\t\t\t\tcase '1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\tcurrent: < SpringController / >\n\t\t\t\t\t};\n\t\t\t\tcase '2':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\tcurrent: < WebFlux / >\n\t\t\t\t\t};\n\t\t\t\tcase '4':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\tcurrent: () => {\n\t\t\t\t\t\t\treturn ( \n\t\t\t\t\t\t\t\t\t<Suspense fallback = { < div > loading... < /div>}> \n\t\t\t\t\t\t\t\t\t\t<SpringScheduling / >\n\t\t\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcase '9':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\t\t\tcurrent: < WebSocket / >\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase '11':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\t\t\tcurrent: < Hateaos / >\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase '25':\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\t\t\tcurrent: () => {\n\t\t\t\t\t\t\t\t\treturn ( \n\t\t\t\t\t\t\t\t\t\t<LSErrorBoundary >\n\t\t\t\t\t\t\t\t\t\t\t<Suspense fallback = {\n\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <h1 > Error happened in children. < /h1>}}> \n\t\t\t\t\t\t\t\t\t\t\t\t\t<SpringRouter / >\n\t\t\t\t\t\t\t\t\t\t\t</Suspense> <\n\t\t\t\t\t\t\t\t\t\t/LSErrorBoundary>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tprev: state.current,\n\t\t\t\t\t\t\t\t\t\tcurrent: 'TODO'\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfunction renderMenu() {\n\t\t\t\t\t\t\t\treturn ( \n\t\t\t\t\t\t\t\t<ul > {springMenu.map((e, i) => {\n\t\t\t\t\t\t\t\t\t\t\treturn ( <div >\n\t\t\t\t\t\t\t\t\t\t\t\t<a key = {i}\n\t\t\t\t\t\t\t\t\t\t\t\t\thref = \"javascript:void(0)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => dispatch({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: e.action\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li key = {i} > {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t} < /li> <\n\t\t\t\t\t\t\t\t\t\t\t\t/a> \n\t\t\t\t\t\t\t\t\t\t\t\t<ul > {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.links.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn ( <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta key = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref = \"javascript:void(0)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() => dispatch({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: item.action\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tli key = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} > {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} < /li> <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t} </ul> <\n\t\t\t\t\t\t\t\t\t\t\t/div>\n\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t} </ul>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfunction renderCurrent() {\n\t\t\t\t\t\t\t\treturn ( <div > {state.current} < /div>)\n\t\t\t\t\t\t\t}\n\n\treturn ( \n\t\t\t\t\t\t\t<div className = \"container-fluid\" >\n\t\t\t\t\t\t\t\t<h6 > Spring.io < /h6> \n\t\t\t\t\t\t\t\t<div className = \"row\" >\n\t\t\t\t\t\t\t\t<div className = \"col-sm-3\" > {\n\t\t\t\t\t\t\t\t\trenderMenu()\n\t\t\t\t\t\t\t\t} </div> \n\t\t\t\t\t\t\t\t<div className = \"col-sm-9\" > {\n\t\t\t\t\t\t\t\t\trenderCurrent()\n\t\t\t\t\t\t\t\t} </div> \n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t</div>\n\t)\n}\nexport default SpringHome;\n";
    return (
        <div className="container">
            <h6>useReducer</h6>
            <p>
                An alternative to <mark>useState</mark>. Accepts a reducer of type (state, action) =&gt; newState, and 
                returns the current state paired with a dispatch method. (If youâ€™re familiar with Redux, 
                you already know how this works.)
            </p>
            <code>const [state, dispatch] = useReducer(reducer, initialArg, init);</code>
            <div style={{ "height": "600px" }} className="row border">
                <algoes-code src={code}></algoes-code>
            </div>
        </div>
    )
}
export default ReactUseReducer;
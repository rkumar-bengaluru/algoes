[
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20262/",
        "title": "Algoes - Quick Sorting Algorithm | rkumar-bengaluru.github.io",
        "description": "Quicksort is an in-place sorting algorithm. Developed by British computer scientist Tony Hoare in 1959 and published in 1961, it is still a commonly used algorithm for sorting. When implemented well, it can be somewhat faster than merge sort and about two or three times faster than heapsort."
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20263/",
        "title": "Algoes - Remove Duplicate from the array | rkumar-bengaluru.github.io",
        "description": "Remove Duplicate from the array."
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20264",
        "title": "Algoes - 32 bit hashing | rkumar-bengaluru.github.io",
        "description": "32 bit hashing in Hashtable.A Hash Function is an algorithm that converts a long string (or message) of any length into a fixed length string known as Message Digest, checksum or digital fingerprint."
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20265/",
        "title": "Algoes - binary search | rkumar-bengaluru.github.io",
        "description": "In computer science, binary search, also known as half-interval search, logarithmic search, or binary chop, is a search algorithm that finds the position of a target value within a sorted array"
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20266",
        "title": "Algoes - linear search | rkumar-bengaluru.github.io",
        "description": "In computer science, a linear search or sequential search is a method for finding an element within a list. It sequentially checks each element of the list until a match is found or the whole list has been searched."
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20267",
        "title": "Algoes - longest prefix string | rkumar-bengaluru.github.io",
        "description": "In computer science, a linear search or sequential search is a method for finding an element within a list. It sequentially checks each element of the list until a match is found or the whole list has been searched."
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20268",
        "title": "Algoes - reverse string | rkumar-bengaluru.github.io",
        "description": "In computer science, a linear search or sequential search is a method for finding an element within a list. It sequentially checks each element of the list until a match is found or the whole list has been searched."
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20269/",
        "title": "Algoes - N Queen Problem | rkumar-bengaluru.github.io",
        "description": "The N Queen is the problem of placing N chess queens on an NÃ—N chessboard so that no two queens attack each other.The idea is to place queens one by one in different columns, starting from the leftmost column. When we place a queen in a column, we check for clashes with already placed queens. In the current column, if we find a row for which there is no clash, we mark this row and column as part of the solution. If we do not find such a row due to clashes then we backtrack and return false."
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20270",
        "title": "Algoes - Climbing Stairs - recursion | rkumar-bengaluru.github.io",
        "description": "There are n stairs, and a person is allowed to jump next stair, skip one stair or skip two stairs. So there are n stairs. So if a person is standing at i-th stair, the person can move to i+1, i+2, i+3-th stair. A recursive function can be formed where at current index i the function is recursively called for i+1, i+2 and i+3 th stair. "
    },
    {
        "id": "https://rkumar-bengaluru.github.io/algoes/20265",
        "title": "Algoes - Reverse a linked list | rkumar-bengaluru.github.io",
        "description": "Given pointer to the head node of a linked list, the task is to reverse the linked list. We need to reverse the list by changing the links between nodes."
    }
]